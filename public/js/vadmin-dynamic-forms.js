!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=71)}({71:function(e,t,n){e.exports=n(72)},72:function(e,t){window.dataSetter=function(e){var t=$(".SerializableItem");items=[],$(t).each(function(){var t=$(this).data("id");item={},item.id=t,item.fields={};for(var n=0;n<e.length;n++){var o=$(this).children(e[n]).children("input").data("field");item.fields[o]=$(this).children(e[n]).children("input").val()}items.push(item)}),console.info(items)},$(document).ready(function(){$(document).on("click","#UpdateList",function(){if(void 0==items||""==items||null==items)alert_error("","Aún no se realizaron cambios");else{var e=$(this).data("route");!function(e,t){$.ajax({url:t,method:"POST",dataType:"JSON",data:{data:e},success:function(e){console.log(e),alert_ok("OK!","Items actualizados")},error:function(e){alert_error("","Ha ingresado un dato incorrecto. Solo puede ingresar números enteros positivos."),console.log("Error en updateList()"),console.log(e)}})}(items,e)}})})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,